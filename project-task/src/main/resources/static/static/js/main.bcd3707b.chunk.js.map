{"version":3,"sources":["component/Navbar.js","actions/Types.js","component/ProjectTask/ProjectTaskItem.js","actions/AddProjecTaskActions.js","component/ProjectBoard.js","component/ProjectTask/AddProjectTask.js","reducers/errorsReducer.js","reducers/projectTaskReducer.js","reducers/index.js","store.js","component/ProjectTask/UpdateProjectTask.js","App.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","GET_ERRORS","GET_PROJECT_TASKS","GET_PROJECT_TASK","DELETE_PROJECT_TASK","ProjectTaskItem","id","this","props","deleteProjectTask","history","project_task","summary","acceptanceCriteria","to","onClick","onDeleteClick","bind","Component","connect","dispatch","a","window","confirm","axios","delete","peyload","ProjectBoard","getBacklog","BoardContent","project_tasks","todoItems","inProgressItems","doneItems","length","role","tasks","map","i","status","push","Fragment","BoardAlgorithm","state","get","res","data","body","AddProjectTask","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProjectTask","addProjectTask","classnames","placeholder","post","error","response","initialState","combineReducers","action","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducers","compose","applyMiddleware","UpdateProjectTask","match","params","getProjectTask","updateTask","editProjectTask","put","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd3707b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav  className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div  className=\"container\">\r\n                <a  className=\"navbar-brand\" href=\"/\">\r\n                    Project Task Tool\r\n                </a>\r\n                <button  className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span  className=\"navbar-toggler-icon\" />\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECT_TASKS = \"GET_PROJECT_TASKS\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'; \r\nimport PropTypes from 'prop-types';\r\nimport {connect, connet} from 'react-redux';\r\nimport {deleteProjectTask} from '../../actions/AddProjecTaskActions';\r\n\r\n class ProjectTaskItem extends Component {\r\n     onDeleteClick(id){\r\n         this.props.deleteProjectTask(id, this.props.history);\r\n     }\r\n    render() {\r\n        const {project_task} = this.props;\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className=\"card-header text-primary\">\r\n                    ID: {project_task.id}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.id}`} className=\"btn btn-primary\">\r\n                        View / Update\r\n                    </Link>\r\n\r\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.id)}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nProjectTaskItem.propTypes = {\r\n    deleteProjectTask:PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProjectTask})(ProjectTaskItem);\r\n","import axios from 'axios';\r\nimport {DELETE_PROJECT_TASK, GET_ERRORS, GET_PROJECT_TASK} from './Types';\r\nimport {GET_PROJECT_TASKS} from './Types';\r\n\r\n\r\nexport const addProjectTask = (project_task, history) => async dispatch => {\r\n    await axios.post(\"https://redux-react-spring.herokuapp.com/api/data\", project_task)\r\n       try{\r\n            dispatch({\r\n             type:GET_ERRORS,\r\n             peyload: {}\r\n         });\r\n             history.push(\"/\");\r\n       } catch(error){\r\n           dispatch({\r\n               type:GET_ERRORS,\r\n               peyload:error.response\r\n           })\r\n       }\r\n};\r\nexport const editProjectTask = (project_task, history) => async dispatch => {\r\n    await axios.put(`https://redux-react-spring.herokuapp.com/api/data/${project_task.id}`, project_task)\r\n       try{\r\n            dispatch({\r\n             type:GET_ERRORS,\r\n             peyload: {}\r\n         });\r\n             history.push(\"/\");\r\n       } catch(error){\r\n           dispatch({\r\n               type:GET_ERRORS,\r\n               peyload:error.response\r\n           })\r\n       }\r\n};\r\n\r\nexport const getBacklog = () => async dispatch => {\r\n    const res = await axios.get(\"https://redux-react-spring.herokuapp.com/api/data\")\r\n    dispatch({\r\n        type: GET_PROJECT_TASKS,\r\n        peyload:res.data.body\r\n    })\r\n};\r\n\r\nexport const deleteProjectTask = (id, history) => async dispatch =>{\r\n   if (window.confirm(`You are deleteing project task ${id}, this action cannot be undone`)) {\r\n       await axios.delete(`https://redux-react-spring.herokuapp.com/api/data/${id}`)\r\n       dispatch=({\r\n           type: DELETE_PROJECT_TASK,\r\n           peyload: id\r\n       });    \r\n   }\r\n};\r\n\r\nexport const getProjectTask = (id, history) => async dispatch =>{\r\n    try{\r\n        const res = await axios.get(`https://redux-react-spring.herokuapp.com/api/data/${id}`)\r\n        dispatch({\r\n            type:GET_PROJECT_TASK,\r\n            peyload: res.data.body\r\n        });\r\n       \r\n    }catch(error){\r\n        history.push(\"/\");\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectTaskItem from './ProjectTask/ProjectTaskItem';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getBacklog} from '../actions/AddProjecTaskActions';\r\n\r\nclass ProjectBoard extends Component {\r\n    componentDidMount(){\r\n        this.props.getBacklog();\r\n    }\r\n    render() {\r\n        const {project_tasks} = this.props.project_tasks\r\n\r\n        let BoardContent;\r\n        let todoItems = []\r\n        let inProgressItems = []\r\n        let doneItems = []\r\n\r\n        const BoardAlgorithm = project_tasks =>{\r\n            if (project_tasks.length < 1) {\r\n                return(\r\n                     <div className=\"alert alert-info text-center \" role=\"alert\">\r\n                     No Project Tasks  on this board\r\n                 </div>\r\n                )\r\n            }else{\r\n                const tasks = project_tasks.map(project_task=>(\r\n                    <ProjectTaskItem key={project_task.id} project_task={project_task} />\r\n                ));\r\n                for (let i = 0; i < tasks.length; i++) {\r\n                   if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                       todoItems.push(tasks[i]);\r\n                   }\r\n\r\n                   if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                       inProgressItems.push(tasks[i]);\r\n                   }\r\n\r\n                   if (tasks[i].props.project_task.status === \"DONE\") {\r\n                       doneItems.push(tasks[i]);\r\n                   }\r\n                }\r\n                return(\r\n                    <React.Fragment>\r\n                            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-secondary text-white\">\r\n                                    <h3>TO DO</h3>\r\n                                </div>\r\n                            </div>\r\n                            {todoItems}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-primary text-white\">\r\n                                    <h3>In Progress</h3>\r\n                                </div>\r\n                            </div>\r\n                            {inProgressItems}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h3>Done</h3>\r\n                                </div>\r\n                            </div>\r\n                            {doneItems}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }\r\n\r\n        BoardContent =  BoardAlgorithm(project_tasks);\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/addProjectTask\" className=\"btn btn-primary mb-3\">\r\n                <i className =\"fas fa-plus-circle\">Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nProjectBoard.propTypes = {\r\n    getBacklog:PropTypes.func.isRequired,\r\n    project_tasks:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_tasks : state.project_task\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);\r\n","import React, { Component } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addProjectTask} from '../../actions/AddProjecTaskActions';\r\nimport classnames from 'classnames';\r\n\r\n class AddProjectTask extends Component {\r\n     constructor(){\r\n         super();\r\n         this.state = {\r\n             summary: \"\",\r\n             acceptanceCriteria: \"\",\r\n             status: \"\",\r\n             errors:{}\r\n         }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n     }\r\n     componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors) {\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n     }\r\n     onChange(e){\r\n         this.setState({[e.target.name]:e.target.value})\r\n         \r\n     }\r\n     onSubmit(e){\r\n         e.preventDefault()\r\n         const newProjectTask = {\r\n             summary : this.state.summary,\r\n             acceptanceCriteria: this.state.acceptanceCriteria,\r\n             status:this.state.status\r\n         }\r\n        //  console.log(newProjectTask);\r\n       this.props.addProjectTask(newProjectTask, this.props.history);\r\n     }\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n              <div className=\"addProjectTask\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to=\"/\" className=\"btn btn-light\">\r\n                                Back to Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\":errors.summary})} \r\n                                    name=\"summary\" placeholder=\"summary\" value={this.state.summary}  onChange={this.onChange} />\r\n                                    {errors.summary && (<div className=\"invalid-feedback\">{errors.summary}</div>)}\r\n                                </div>\r\n                                <p>{errors.summary}</p>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" \r\n                                    name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria}  onChange={this.onChange}></textarea>\r\n                                </div> \r\n                                 <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"status\" \r\n                                    value={this.state.status } onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                            \r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    errors : state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);\r\n","import {GET_ERRORS} from '../actions/Types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state = initialState, action ){\r\n    switch(action.type){\r\n        case GET_ERRORS :\r\n            return action.peyload;\r\n        default: \r\n            return  state;\r\n    }\r\n}","import {GET_PROJECT_TASKS, DELETE_PROJECT_TASK, GET_PROJECT_TASK} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    project_tasks : [],\r\n    project_task : {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROJECT_TASKS : \r\n            return {\r\n                 ...state,\r\n                project_tasks:action.peyload\r\n            };\r\n        case GET_PROJECT_TASK :\r\n            return {\r\n                ...state,\r\n                project_task: action.peyload\r\n            };\r\n        case DELETE_PROJECT_TASK:\r\n            return{\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task => project_task.id !== action.peyload)\r\n            } ;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n","import {combineReducers} from 'redux';\r\nimport errorsReducer from './errorsReducer';\r\nimport projectTaskReducer from './projectTaskReducer';\r\n\r\nexport default combineReducers({\r\n    errors: errorsReducer,\r\n    project_task: projectTaskReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducers from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__()\r\nlet store;\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n   store = createStore(\r\n      rootReducers,\r\n      initialState,\r\n      compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n    );\r\n}else{\r\n  store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  )\r\n}\r\n\r\nexport default store;\r\n\r\n","import React, { Component } from 'react'\r\nimport classnames from 'classnames';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {getProjectTask, editProjectTask} from '../../actions/AddProjecTaskActions'\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            summary: '',\r\n            acceptanceCriteria: '',\r\n            status : '',\r\n            errors: {}\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getProjectTask(id);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors) {\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n        const {\r\n            id,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status\r\n        } = nextProps.project_task\r\n        this.setState({\r\n             id,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status\r\n        })\r\n    };\r\n    \r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const updateTask = {\r\n            id: this.state.id,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status : this.state.status\r\n        };\r\n        this.props.editProjectTask(updateTask, this.props.history);\r\n    }\r\n\r\n\r\n  render() {\r\n      const {errors} = this.state;\r\n    return (\r\n        <div className=\"addProjectTask\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to=\"/\" className=\"btn btn-light\">\r\n                            Back to Board\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",\r\n                                {\"is-invalid\" : errors.summary})} \r\n                                name=\"summary\"   placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\"\r\n                                 name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange}></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"TO_DO\">TO DO</option>\r\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                    <option value=\"DONE\">DONE</option>\r\n                                </select>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n  }\r\n};\r\n\r\nUpdateProjectTask.propTypes = {\r\n    project_task : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired,\r\n    getProjectTask : PropTypes.func.isRequired,\r\n    editProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ( {\r\n    project_task : state.project_task.project_task,\r\n    errors : state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProjectTask, editProjectTask}) (UpdateProjectTask); ","import React,{ Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './component/Navbar';\nimport ProjectBoard from './component/ProjectBoard';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport AddProjectTask from './component/ProjectTask/AddProjectTask';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport UpdateProjectTask from './component/ProjectTask/UpdateProjectTask';\n\n\nclass App extends Component {\n  render(){\n    return (\n     <Provider store={store}>\n        <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path='/' component={ProjectBoard} />\n          <Route exact path='/addProjectTask' component={AddProjectTask} />\n          <Route exact path='/updateProjectTask/:id' component={UpdateProjectTask} />\n        </div>\n      </Router>\n     </Provider>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}